{
	"info": {
		"_postman_id": "479e75de-91c2-43d2-af91-193d41c5b06c",
		"name": "medicalapp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44273623",
		"_collection_link": "https://carlos-3724503.postman.co/workspace/Carlos's-Workspace~34dd7134-45f4-4f88-85d7-89a569cb65c9/collection/44273623-479e75de-91c2-43d2-af91-193d41c5b06c?action=share&source=collection_link&creator=44273623"
	},
	"item": [
		{
			"name": "mock",
			"item": [
				{
					"name": "patients",
					"item": [
						{
							"name": "patients ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"name\": \"Anaa\",\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/patients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/patients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () { pm.response.to.have.status(409); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is CONFLICT\", function () { pm.expect(pm.response.json().code).to.eql(\"CONFLICT\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"name\": \"Ana\",\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/patients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"name\": \"Ana\",\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/patients/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/patients/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });\r",
											"pm.test(\"Body is empty\", function () { pm.expect(pm.response.text()).to.have.length(0); });\r",
											"pm.test(\"No Content-Type header\", function () { pm.expect(pm.response.headers.has(\"Content-Type\")).to.eql(true); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "patients not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/patients/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"patients",
										"999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "doctors",
					"item": [
						{
							"name": "doctors ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 10,\r\n  \"name\": \"Luisa\",\r\n  \"surname\": \"Pérez\",\r\n  \"licenseNumber\": \"COL-12345\",\r\n  \"specialty\": \"Cardiology\",\r\n  \"hiringDate\": \"2022-01-15\",\r\n  \"active\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/doctors",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 10,\r\n  \"surname\": \"Pérez\",\r\n  \"licenseNumber\": \"COL-12345\",\r\n  \"specialty\": \"Cardiology\",\r\n  \"hiringDate\": \"2022-01-15\",\r\n  \"active\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/doctors",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () { pm.response.to.have.status(409); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is CONFLICT\", function () { pm.expect(pm.response.json().code).to.eql(\"CONFLICT\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 10,\r\n  \"name\": \"Luis\",\r\n  \"surname\": \"Pérez\",\r\n  \"licenseNumber\": \"COL-12345\",\r\n  \"specialty\": \"Cardiology\",\r\n  \"hiringDate\": \"2022-01-15\",\r\n  \"active\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/doctors",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"name\": \"Ana\",\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/doctors/10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"10"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 10,\r\n  \"surname\": \"Pérez\",\r\n  \"licenseNumber\": \"COL-12345\",\r\n  \"specialty\": \"Cardiology\",\r\n  \"hiringDate\": \"2022-01-15\",\r\n  \"active\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/doctors/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });\r",
											"pm.test(\"Body is empty\", function () { pm.expect(pm.response.text()).to.have.length(0); });\r",
											"pm.test(\"No Content-Type header\", function () { pm.expect(pm.response.headers.has(\"Content-Type\")).to.eql(true); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "doctors not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/doctors/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"doctors",
										"999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "medicines",
					"item": [
						{
							"name": "medicines ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"name\": \"Ibuprofeno\",\r\n  \"description\": \"Anti-inflammatory\",\r\n  \"category\": \"Analgesic\",\r\n  \"price\": 4.75,\r\n  \"available\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/medicines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"description\": \"Anti-inflammatory\",\r\n  \"category\": \"Analgesic\",\r\n  \"price\": 4.75,\r\n  \"available\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/medicines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () { pm.response.to.have.status(409); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is CONFLICT\", function () { pm.expect(pm.response.json().code).to.eql(\"CONFLICT\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"name\": \"Ibuprofen\",\r\n  \"description\": \"Anti-inflammatory\",\r\n  \"category\": \"Analgesic\",\r\n  \"price\": 4.75,\r\n  \"available\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/medicines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 1,\r\n  \"name\": \"Ana\",\r\n  \"surname\": \"García\",\r\n  \"email\": \"ana@example.com\",\r\n  \"birthDate\": \"1990-03-12\",\r\n  \"active\": true,\r\n  \"weightKg\": 64.5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/medicines/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 100,\r\n  \"description\": \"Anti-inflammatory\",\r\n  \"category\": \"Analgesic\",\r\n  \"price\": 4.75,\r\n  \"available\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/medicines/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });\r",
											"pm.test(\"Body is empty\", function () { pm.expect(pm.response.text()).to.have.length(0); });\r",
											"pm.test(\"No Content-Type header\", function () { pm.expect(pm.response.headers.has(\"Content-Type\")).to.eql(true); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "medicines not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/medicines/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"medicines",
										"999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "appointments",
					"item": [
						{
							"name": "appointments ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/appointments/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/appointments/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/appointments/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 200,\r\n  \"date\": \"2025-09-02T09:00:00\",\r\n  \"reason\": \"Checkup\",\r\n  \"confirmed\": true,\r\n  \"cost\": 45.0,\r\n  \"durationMinutes\": 30,\r\n  \"patientId\": 1,\r\n  \"doctorId\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/appointments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 200,\r\n  \"reason\": \"Checkup\",\r\n  \"confirmed\": true,\r\n  \"cost\": 45.0,\r\n  \"durationMinutes\": 30,\r\n  \"patientId\": 1,\r\n  \"doctorId\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/appointments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () { pm.response.to.have.status(409); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is CONFLICT\", function () { pm.expect(pm.response.json().code).to.eql(\"CONFLICT\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 200,\r\n  \"date\":\"2025-09-01T10:30:00\",\r\n  \"reason\": \"Checkup\",\r\n  \"confirmed\": true,\r\n  \"cost\": 45.0,\r\n  \"durationMinutes\": 30,\r\n  \"patientId\": 1,\r\n  \"doctorId\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/appointments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 200,\r\n  \"date\": \"2025-09-02T09:00:00\",\r\n  \"reason\": \"Checkup\",\r\n  \"confirmed\": true,\r\n  \"cost\": 45.0,\r\n  \"durationMinutes\": 30,\r\n  \"patientId\": 1,\r\n  \"doctorId\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/appointments/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 200,\r\n  \"reason\": \"Checkup\",\r\n  \"confirmed\": true,\r\n  \"cost\": 45.0,\r\n  \"durationMinutes\": 30,\r\n  \"patientId\": 1,\r\n  \"doctorId\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/appointments/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 200,\r\n  \"date\": \"2025-09-02T09:00:00\",\r\n  \"reason\": \"Checkup\",\r\n  \"confirmed\": true,\r\n  \"cost\": 45.0,\r\n  \"durationMinutes\": 30,\r\n  \"patientId\": 1,\r\n  \"doctorId\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/appointments/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });\r",
											"pm.test(\"Body is empty\", function () { pm.expect(pm.response.text()).to.have.length(0); });\r",
											"pm.test(\"No Content-Type header\", function () { pm.expect(pm.response.headers.has(\"Content-Type\")).to.eql(true); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/appointments/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/appointments/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "appointments not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/appointments/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"appointments",
										"999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "prescriptions",
					"item": [
						{
							"name": "prescriptions ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/prescriptions/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/prescriptions/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/prescriptions/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 300,\r\n  \"notes\": \"Take after mealss\",\r\n  \"active\": true,\r\n  \"durationDays\": 7,\r\n  \"totalCost\": 12.5,\r\n  \"dosageInstructions\": \"1 pill x 8h\",\r\n  \"appointmentId\": 200,\r\n  \"medicineId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/prescriptions",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions  bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 300,\r\n  \"active\": true,\r\n  \"durationDays\": 7,\r\n  \"totalCost\": 12.5,\r\n  \"dosageInstructions\": \"1 pill x 8h\",\r\n  \"appointmentId\": 200,\r\n  \"medicineId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/prescriptions",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () { pm.response.to.have.status(409); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is CONFLICT\", function () { pm.expect(pm.response.json().code).to.eql(\"CONFLICT\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 300,\r\n  \"notes\": \"Take after meals\",\r\n  \"active\": true,\r\n  \"durationDays\": 7,\r\n  \"totalCost\": 12.5,\r\n  \"dosageInstructions\": \"1 pill x 8h\",\r\n  \"appointmentId\": 200,\r\n  \"medicineId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/prescriptions",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has id\", function () { pm.expect(pm.response.json()).to.have.property(\"id\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 300,\r\n  \"notes\": \"Take after meals - updated\",\r\n  \"active\": true,\r\n  \"durationDays\": 7,\r\n  \"totalCost\": 12.5,\r\n  \"dosageInstructions\": \"1 pill x 8h\",\r\n  \"appointmentId\": 200,\r\n  \"medicineId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/prescriptions/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions bad request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 300,\r\n  \"active\": true,\r\n  \"durationDays\": 7,\r\n  \"totalCost\": 12.5,\r\n  \"dosageInstructions\": \"1 pill x 8h\",\r\n  \"appointmentId\": 200,\r\n  \"medicineId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/prescriptions/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 300,\r\n  \"notes\": \"Take after meals - updated\",\r\n  \"active\": true,\r\n  \"durationDays\": 7,\r\n  \"totalCost\": 12.5,\r\n  \"dosageInstructions\": \"1 pill x 8h\",\r\n  \"appointmentId\": 200,\r\n  \"medicineId\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/prescriptions/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions ok",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });\r",
											"pm.test(\"Body is empty\", function () { pm.expect(pm.response.text()).to.have.length(0); });\r",
											"pm.test(\"No Content-Type header\", function () { pm.expect(pm.response.headers.has(\"Content-Type\")).to.eql(true); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/prescriptions/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions bad id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () { pm.response.to.have.status(400); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body has message\", function () { pm.expect(pm.response.json()).to.have.property(\"message\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/prescriptions/abc",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"abc"
									]
								}
							},
							"response": []
						},
						{
							"name": "prescriptions not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });\r",
											"pm.test(\"Content-Type is JSON\", function () { pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\"); });\r",
											"pm.test(\"Body code is NOT_FOUND\", function () { pm.expect(pm.response.json().code).to.eql(\"NOT_FOUND\"); });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/prescriptions/999",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"prescriptions",
										"999"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "JPQL",
			"item": [
				{
					"name": "/appointments/jpql/by-patient-email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/appointments/jpql/by-patient-email?email=carlosj@gmail.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"appointments",
								"jpql",
								"by-patient-email"
							],
							"query": [
								{
									"key": "email",
									"value": "carlosj@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/appointments/jpql/by-doctor-name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/appointments/jpql/by-doctor-name?name=Diego",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"appointments",
								"jpql",
								"by-doctor-name"
							],
							"query": [
								{
									"key": "name",
									"value": "Diego"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/appointments/jpql/with-cost-greater-than",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/appointments/jpql/with-cost-greater-than?cost=50",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"appointments",
								"jpql",
								"with-cost-greater-than"
							],
							"query": [
								{
									"key": "cost",
									"value": "50"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SQL",
			"item": [
				{
					"name": "/appointments/native/by-patient-email",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/appointments/native/by-patient-email?email=carlosj@gmail.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"appointments",
								"native",
								"by-patient-email"
							],
							"query": [
								{
									"key": "email",
									"value": "carlosj@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/appointments/native/by-doctor-name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/appointments/native/by-doctor-name?name=Diego",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"appointments",
								"native",
								"by-doctor-name"
							],
							"query": [
								{
									"key": "name",
									"value": "Diego"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/appointments/native/with-cost-greater-than",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/appointments/native/with-cost-greater-than?cost=50",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"appointments",
								"native",
								"with-cost-greater-than"
							],
							"query": [
								{
									"key": "cost",
									"value": "50"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "prueba APIMan",
			"item": []
		},
		{
			"name": "/appointments",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/appointments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "/appointments/{appointmentId}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/appointments/{appointmentId}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"appointments",
						"{appointmentId}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/patients/{patientId}/doctors/{doctorId}/appointments",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"date\" : \"2025-08-13\",\r\n  \"reason\": \"indicios de fiebre\",\r\n  \"confirmed\": true,\r\n  \"cost\": 200,\r\n  \"durationMinutes\": 300\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/patients/1/doctors/1/appointments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"patients",
						"1",
						"doctors",
						"1",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "/appointments/{appointmentId}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/appointments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "/appointments/{appointmentId}",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/appointments/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"appointments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "/doctors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/doctors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"doctors"
					]
				}
			},
			"response": []
		},
		{
			"name": "/doctors/{doctorId}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/doctors/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"doctors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "/doctors",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"name\": \"carlos\",\r\n    \"surname\": \"Lopez\",\r\n    \"licenseNumber\": 200,\r\n    \"specialty\": \"Roturas\",\r\n    \"hiringDate\": \"2025-08-13\",\r\n    \"active\": true\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/doctors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"doctors"
					]
				}
			},
			"response": []
		},
		{
			"name": "/doctors/{doctorId}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/appointments/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"appointments",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "/doctors/{doctorId}",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/doctors/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"doctors",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "/patients",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "/patients/{patientId}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/patients/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"patients",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "/patients",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"pepe\",\r\n  \"surname\": \"jimenez\",\r\n  \"email\": \"carlosj@gmail.com\",\r\n  \"birthDate\": \"1999-03-27\",\r\n  \"active\": true,\r\n  \"weightKg\": 73\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "/patients/{patientId}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/patients",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"patients"
					]
				}
			},
			"response": []
		},
		{
			"name": "/patients/{patientId}",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/patients/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"patients",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "/medicines",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "/medicines/{medicineId}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "/medicines",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"ibuprofeno\",\r\n  \"manufacturer\": \"farmaSA\",\r\n  \"price\": 15,\r\n  \"prescriptionRequired\": false,\r\n  \"expiryDate\": \"2026-08-13\",\r\n  \"stock\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "/medicines/{medicineId}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "/medicines/{medicineId}",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/medicines",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"medicines"
					]
				}
			},
			"response": []
		},
		{
			"name": "/prescriptions",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/prescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"prescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/prescriptions/{prescriptionId}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/prescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"prescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/appointments/{appointmentId}/medicines/{medicineId}/prescriptions",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"notes\": \"ninguna\",\r\n  \"active\": true,\r\n  \"durationDays\": 5,\r\n  \"totalCost\": 10,\r\n  \"dosageInstructions\": \"cada 8 horas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/appointments/1/medicines/1/prescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"appointments",
						"1",
						"medicines",
						"1",
						"prescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/prescriptions/{prescriptionId}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/prescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"prescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "/prescriptions/{prescriptionId}",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/prescriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"prescriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://gateway.local.gd:8080/carlos/hellloapi/1.3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://gateway.local.gd:8080/carlos/hellloapi/1.3/doctors?apikey=6dff4bd0-26d4-4983-85e5-77b48183434a",
					"protocol": "http",
					"host": [
						"gateway",
						"local",
						"gd"
					],
					"port": "8080",
					"path": [
						"carlos",
						"hellloapi",
						"1.3",
						"doctors"
					],
					"query": [
						{
							"key": "apikey",
							"value": "6dff4bd0-26d4-4983-85e5-77b48183434a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://gateway.local.gd:8080/carlos/hellloapi/1.3?apikey=6dff4bd0-26d4-4983-85e5-77b48183434a",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://gateway.local.gd:8080/carlos/hellloapi/1.3/patients?apikey=6dff4bd0-26d4-4983-85e5-77b48183434a",
					"protocol": "http",
					"host": [
						"gateway",
						"local",
						"gd"
					],
					"port": "8080",
					"path": [
						"carlos",
						"hellloapi",
						"1.3",
						"patients"
					],
					"query": [
						{
							"key": "apikey",
							"value": "6dff4bd0-26d4-4983-85e5-77b48183434a"
						}
					]
				}
			},
			"response": []
		}
	]
}